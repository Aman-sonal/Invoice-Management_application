{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\editmodal.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography'; // import { grey } from '@material-ui/core/colors';\n// import AddIcon from '@material-ui/icons/Add';\n\nimport EditIcon from '@material-ui/icons/Edit'; // import Fab from '@material-ui/core/Fab';\n\nimport { Paper } from '@material-ui/core';\nimport { TextareaAutosize, ThemeProviderm, TextField, Grid } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { Edit } from '../reducers/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {// padding: theme.spacing(2),\n  },\n  MuiDialogContent: {\n    dividers: {\n      padding: '0.5em'\n    }\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function EditModal({\n  rows,\n  btn\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [amount, setAmount] = React.useState(\"\");\n  const [notes, setnote] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAmount = e => {\n    if (e.target.name == 'notes') {\n      setnote({\n        notes: e.target.value\n      }); // console.log(notes);\n    } else {\n      setAmount({\n        amount: e.target.value\n      }); // console.log(amount);\n    }\n  };\n\n  const handleSubmit = () => {\n    console.log(\"In Edit Submit\", notes, amount);\n    dispatch(Edit({\n      rows,\n      notes,\n      amount\n    }));\n  };\n\n  console.log(\"In Edit\", rows);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      disabled: btn,\n      startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 61\n      }, this),\n      onClick: handleClickOpen,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      style: {\n        backgroundColor: 'transparent'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          width: '28vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"customized-dialog-title\",\n          onClose: handleClose,\n          children: \"Edit Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          dividers: true,\n          style: {\n            padding: '0.5em'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  style: {\n                    margin: '1em'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Invoice Amount \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 22\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Notes:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 22\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      name: \"amount\",\n                      fullWidth: true,\n                      onChange: handleAmount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      name: \"notes\",\n                      fullWidth: true,\n                      multiline: true,\n                      rows: \"4\",\n                      onChange: handleAmount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            style: {\n              color: '#14AFF1',\n              marginRight: '10vw'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            style: {\n              backgroundColor: '#14AFF1'\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"XRUHPQbREA5IqmA5/B4o1vdHRd0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/editmodal.jsx"],"names":["React","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","EditIcon","Paper","TextareaAutosize","ThemeProviderm","TextField","Grid","useDispatch","Edit","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","dividers","DialogActions","EditModal","rows","btn","open","setOpen","useState","amount","setAmount","notes","setnote","dispatch","handleClickOpen","handleClose","handleAmount","e","target","name","value","handleSubmit","console","log","backgroundColor","width","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { grey } from '@material-ui/core/colors';\r\n// import AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n// import Fab from '@material-ui/core/Fab';\r\nimport { Paper } from '@material-ui/core';\r\nimport { TextareaAutosize, ThemeProviderm, TextField, Grid } from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Edit} from '../reducers/index';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    // padding: theme.spacing(2),\r\n  },\r\n  MuiDialogContent:{\r\n    dividers:{\r\n    padding:'0.5em',\r\n    }\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n    \r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function EditModal({rows, btn}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [amount, setAmount] = React.useState(\"\");\r\n  const [notes, setnote] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleAmount = (e) => {\r\n      if(e.target.name=='notes')\r\n      {\r\n        setnote({ notes: e.target.value});\r\n        // console.log(notes);\r\n      }\r\n      else{\r\n        setAmount({ amount: e.target.value});\r\n        // console.log(amount);\r\n      } \r\n  };\r\n  const handleSubmit= ()=>{\r\n    console.log(\"In Edit Submit\",notes, amount);\r\n    dispatch(Edit({rows, notes, amount}));\r\n  }\r\n  console.log(\"In Edit\", rows);\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" disabled={btn} startIcon= {<EditIcon />} onClick={handleClickOpen}>\r\n          Edit\r\n      </Button>\r\n      <Dialog  onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} style={{backgroundColor: 'transparent',}}>\r\n        <Paper style={{width:'28vw'}}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Edit Invoice\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{ padding:'0.5em'}}>\r\n            {/* {children} */}\r\n            <div>\r\n              <form>\r\n                <Grid container>\r\n                <Grid item xs={4} style={{margin:'1em'}}>  \r\n                  <Typography>\r\n                     <p>Invoice Amount </p> \r\n                     <p>\r\n                         Notes:\r\n                     </p>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <p><TextField  name=\"amount\" fullWidth onChange={handleAmount}/></p>\r\n                    <p><TextField  name=\"notes\" fullWidth multiline rows=\"4\" onChange={handleAmount}/></p>\r\n                    {/* <TextField variant=\"outlined\" multiline rows=\"4\" name=\"search\"  /> */}\r\n                </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button  onClick={handleClose} style={{color:'#14AFF1',marginRight:'10vw' }}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"outlined\"  >\r\n            Reset\r\n          </Button>\r\n          <Button onClick={handleSubmit} style={{backgroundColor:'#14AFF1', }} >\r\n          Save\r\n          </Button>\r\n        </DialogActions>\r\n        </Paper>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}