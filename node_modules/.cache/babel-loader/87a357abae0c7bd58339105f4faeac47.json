{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\table.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport clsx from \"clsx\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"#2A3E4C\"\n    }\n  }\n}))(TableRow); // const useStyles = makeStyles({\n//   table: {\n//     minWidth: 700,\n//   },\n// });\n\nconst useStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\"\n    }\n  },\n  checkedIcon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"'\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\"\n    }\n  }\n});\n\nconst CheckBoxTotal = props => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    className: classes.root,\n    disableRipple: true,\n    color: \"default\",\n    checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(classes.icon, classes.checkedIcon)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this),\n    inputProps: {\n      \"aria-label\": \"decorative checkbox\"\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckBoxTotal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckBoxTotal;\n\nconst CheckBox = props => {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Checkbox, {\n    className: classes.root,\n    disableRipple: true,\n    color: \"default\",\n    checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: clsx(classes.icon, classes.checkedIcon)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 20\n    }, this),\n    icon: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this),\n    inputProps: {\n      \"aria-label\": \"decorative checkbox\"\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CheckBox, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CheckBox;\n\nclass InvoiceTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectAll = () => {\n      var selectAll = !this.state.selectAll;\n      this.setState({\n        selectAll: selectAll\n      });\n      console.log(formData.selectAll);\n      var checkedCopy = [];\n      this.state.tableData.forEach(function (e, index) {\n        checkedCopy.push(selectAll);\n      });\n      this.setState({\n        checked: checkedCopy\n      });\n    };\n\n    this.state = {\n      tableData: [{\n        resourceID: \"\",\n        resourceType: \"\",\n        tenantName: \"\",\n        dealerID: \"\",\n        status: \"\",\n        logFilePath: \"\",\n        supportPerson: \"\",\n        lastUpdatedTime: \"\",\n        selectAll: false,\n        checked: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://private-9ff5e-stackoverflow.apiary-mock.com/questions\", {\n      responseType: \"json\"\n    }).then(response => {\n      this.setState({\n        tableData: response.data\n      });\n    });\n  }\n\n  render() {\n    const {\n      tableData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(CheckBoxTotal, {\n                onClick: this.selectAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"resourceID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"resourceType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"tenantName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"dealerID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"logFilePath\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"supportPerson\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: \"lastUpdatedTime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: !tableData ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this) : tableData.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.resourceID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.resourceType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.tenantName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.dealerID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.logFilePath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.supportPerson\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              children: row.lastUpdatedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InvoiceTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckBoxTotal\");\n$RefreshReg$(_c2, \"CheckBox\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/table.jsx"],"names":["React","axios","clsx","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Checkbox","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","useStyles","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","checkedIcon","display","content","CheckBoxTotal","props","classes","CheckBox","InvoiceTable","Component","constructor","selectAll","state","setState","console","log","formData","checkedCopy","tableData","forEach","e","index","push","checked","resourceID","resourceType","tenantName","dealerID","status","logFilePath","supportPerson","lastUpdatedTime","componentDidMount","get","responseType","then","response","data","render","map","row"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,eAAe,GAAGX,UAAU,CAAEY,KAAD,KAAY;AAC7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC,KADlC;AAEJC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBG;AAFxB,GADuC;AAK7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AALuC,CAAZ,CAAD,CAAV,CAQpBjB,SARoB,CAAxB;AAUA,MAAMkB,cAAc,GAAGtB,UAAU,CAAEY,KAAD,KAAY;AAC5CW,EAAAA,IAAI,EAAE;AACJ,2BAAuB;AACrBT,MAAAA,eAAe,EAAE;AADI;AADnB;AADsC,CAAZ,CAAD,CAAV,CAMnBP,QANmB,CAAvB,C,CAOA;AACA;AACA;AACA;AACA;;AAEA,MAAMiB,SAAS,GAAGvB,UAAU,CAAC;AAC3BsB,EAAAA,IAAI,EAAE;AACJ,eAAW;AACTT,MAAAA,eAAe,EAAE;AADR;AADP,GADqB;AAM3BW,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,SAAS,EACP,qEALE;AAMJf,IAAAA,eAAe,EAAE,SANb;AAOJgB,IAAAA,eAAe,EACb,8DARE;AASJ,gCAA4B;AAC1BC,MAAAA,OAAO,EAAE,8BADiB;AAE1BC,MAAAA,aAAa,EAAE;AAFW,KATxB;AAaJ,uBAAmB;AACjBlB,MAAAA,eAAe,EAAE;AADA;AAbf,GANqB;AAuB3BmB,EAAAA,WAAW,EAAE;AACXnB,IAAAA,eAAe,EAAE,SADN;AAEXgB,IAAAA,eAAe,EACb,8DAHS;AAIX,gBAAY;AACVI,MAAAA,OAAO,EAAE,OADC;AAEVP,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,MAAM,EAAE,EAHE;AAIVE,MAAAA,eAAe,EACb,mHACA,gGADA,GAEA,sHAPQ;AAQVK,MAAAA,OAAO,EAAE;AARC,KAJD;AAcX,uBAAmB;AACjBrB,MAAAA,eAAe,EAAE;AADA;AAdR;AAvBc,CAAD,CAA5B;;AA0CA,MAAMsB,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,sBACE,QAAC,QAAD;AACE,IAAA,SAAS,EAAEc,OAAO,CAACf,IADrB;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,WAAW,eAAE;AAAM,MAAA,SAAS,EAAExB,IAAI,CAACuC,OAAO,CAACb,IAAT,EAAea,OAAO,CAACL,WAAvB;AAArB;AAAA;AAAA;AAAA;AAAA,YAJf;AAKE,IAAA,IAAI,eAAE;AAAM,MAAA,SAAS,EAAEK,OAAO,CAACb;AAAzB;AAAA;AAAA;AAAA;AAAA,YALR;AAME,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KANd;AAAA,OAOMY;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbD;;GAAMD,a;UACYZ,S;;;KADZY,a;;AAeN,MAAMG,QAAQ,GAAIF,KAAD,IAAW;AAAA;;AAC1B,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,sBACE,QAAC,QAAD;AACE,IAAA,SAAS,EAAEc,OAAO,CAACf,IADrB;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,WAAW,eAAE;AAAM,MAAA,SAAS,EAAExB,IAAI,CAACuC,OAAO,CAACb,IAAT,EAAea,OAAO,CAACL,WAAvB;AAArB;AAAA;AAAA;AAAA;AAAA,YAJf;AAKE,IAAA,IAAI,eAAE;AAAM,MAAA,SAAS,EAAEK,OAAO,CAACb;AAAzB;AAAA;AAAA;AAAA;AAAA,YALR;AAME,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KANd;AAAA,OAOMY;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbD;;IAAME,Q;UACYf,S;;;MADZe,Q;;AAeN,MAAMC,YAAN,SAA2B3C,KAAK,CAAC4C,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBM,SApBmB,GAoBT,MAAK;AACb,UAAIA,SAAS,GAAG,CAAC,KAAKC,KAAL,CAAWD,SAA5B;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEA;AAAb,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACL,SAArB;AACA,UAAIM,WAAW,GAAG,EAAlB;AACA,WAAKL,KAAL,CAAWM,SAAX,CAAqBC,OAArB,CAA6B,UAASC,CAAT,EAAYC,KAAZ,EAAmB;AAC9CJ,QAAAA,WAAW,CAACK,IAAZ,CAAiBX,SAAjB;AACD,OAFD;AAGA,WAAKE,QAAL,CAAc;AACZU,QAAAA,OAAO,EAAEN;AADG,OAAd;AAGD,KA/BkB;;AAGjB,SAAKL,KAAL,GAAa;AACXM,MAAAA,SAAS,EAAE,CACT;AACEM,QAAAA,UAAU,EAAE,EADd;AAEEC,QAAAA,YAAY,EAAE,EAFhB;AAGEC,QAAAA,UAAU,EAAE,EAHd;AAIEC,QAAAA,QAAQ,EAAE,EAJZ;AAKEC,QAAAA,MAAM,EAAE,EALV;AAMEC,QAAAA,WAAW,EAAE,EANf;AAOEC,QAAAA,aAAa,EAAE,EAPjB;AAQEC,QAAAA,eAAe,EAAE,EARnB;AASEpB,QAAAA,SAAS,EAAE,KATb;AAUEY,QAAAA,OAAO,EAAC;AAVV,OADS;AADA,KAAb;AAgBD;;AAaDS,EAAAA,iBAAiB,GAAG;AAClBlE,IAAAA,KAAK,CACFmE,GADH,CACO,8DADP,EACuE;AACnEC,MAAAA,YAAY,EAAE;AADqD,KADvE,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,WAAKvB,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEkB,QAAQ,CAACC;AAAtB,OAAd;AACD,KANH;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;AACA,wBACE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEpC,KAA3B;AAAA,6BACE,QAAC,KAAD;AAAO,sBAAW,kBAAlB;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA,qCACE,QAAC,aAAD;AAAgB,gBAAA,OAAO,EAAE,KAAKmC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,SAAD;AAAA,oBACG,CAACO,SAAD,gBACC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCA,SAAS,CAACqB,GAAV,CAAeC,GAAD,iBACZ,QAAC,cAAD;AAAA,oCACE,QAAC,SAAD;AAAA,qCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,eAAD;AAAiB,cAAA,SAAS,EAAC,IAA3B;AAAgC,cAAA,KAAK,EAAC,KAAtC;AAAA,wBACGA,GAAG,CAAChB;AADP;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,eAAD;AAAA,wBAAkBgB,GAAG,CAACf;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,eAAD;AAAA,wBAAkBe,GAAG,CAACd;AAAtB;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,eAAD;AAAA,wBAAkBc,GAAG,CAACb;AAAtB;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE,QAAC,eAAD;AAAA,wBAAkBa,GAAG,CAACZ;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE,QAAC,eAAD;AAAA,wBAAkBY,GAAG,CAACX;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAXF,eAYE,QAAC,eAAD;AAAA,wBAAkBW,GAAG,CAACV;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE,QAAC,eAAD;AAAA,wBAAkBU,GAAG,CAACT;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4CD;;AAzFwC;;AA2F3C,eAAevB,YAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(even)\": {\r\n      backgroundColor: \"#2A3E4C\",\r\n    },\r\n  },\r\n}))(TableRow);\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     minWidth: 700,\r\n//   },\r\n// });\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n});\r\nconst CheckBoxTotal = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Checkbox\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst CheckBox = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Checkbox\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      inputProps={{ \"aria-label\": \"decorative checkbox\" }}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nclass InvoiceTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tableData: [\r\n        {\r\n          resourceID: \"\",\r\n          resourceType: \"\",\r\n          tenantName: \"\",\r\n          dealerID: \"\",\r\n          status: \"\",\r\n          logFilePath: \"\",\r\n          supportPerson: \"\",\r\n          lastUpdatedTime: \"\",\r\n          selectAll: false,\r\n          checked:[]\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  selectAll=() =>{\r\n    var selectAll = !this.state.selectAll;\r\n    this.setState({ selectAll: selectAll });\r\n    console.log(formData.selectAll);\r\n    var checkedCopy = [];\r\n    this.state.tableData.forEach(function(e, index) {\r\n      checkedCopy.push(selectAll);\r\n    });\r\n    this.setState({\r\n      checked: checkedCopy\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://private-9ff5e-stackoverflow.apiary-mock.com/questions\", {\r\n        responseType: \"json\",\r\n      })\r\n      .then((response) => {\r\n        this.setState({ tableData: response.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { tableData } = this.state;\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <CheckBoxTotal  onClick={this.selectAll}/>\r\n              </TableCell>\r\n              <StyledTableCell>resourceID</StyledTableCell>\r\n              <StyledTableCell>resourceType</StyledTableCell>\r\n              <StyledTableCell>tenantName</StyledTableCell>\r\n              <StyledTableCell>dealerID</StyledTableCell>\r\n              <StyledTableCell>status</StyledTableCell>\r\n              <StyledTableCell>logFilePath</StyledTableCell>\r\n              <StyledTableCell>supportPerson</StyledTableCell>\r\n              <StyledTableCell>lastUpdatedTime</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {!tableData ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              tableData.map((row) => (\r\n                <StyledTableRow>\r\n                  <TableCell>\r\n                    <CheckBox />\r\n                  </TableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.resourceID}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>{row.resourceType}</StyledTableCell>\r\n                  <StyledTableCell>{row.tenantName}</StyledTableCell>\r\n                  <StyledTableCell>{row.dealerID}</StyledTableCell>\r\n                  <StyledTableCell>{row.status}</StyledTableCell>\r\n                  <StyledTableCell>{row.logFilePath}</StyledTableCell>\r\n                  <StyledTableCell>{row.supportPerson}</StyledTableCell>\r\n                  <StyledTableCell>{row.lastUpdatedTime}</StyledTableCell>\r\n                </StyledTableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\nexport default InvoiceTable;\r\n"]},"metadata":{},"sourceType":"module"}