{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\addform.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from 'react';\n// import { FormControl ,InputLabel ,Input ,FormHelperText } from '@material-ui/core';\n// import { TextareaAutosize } from '@material-ui/core';\n// import { makeStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\n// const useStyles = makeStyles((theme) => ({\n//   container: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 200,\n//   },\n// }));\n//  function DatePickers() {\n//   const classes = useStyles();\n//   return (\n//     <form className={classes.container} noValidate>\n//       <TextField\n//         id=\"date\"\n//         label=\"Birthday\"\n//         type=\"date\"\n//         defaultValue=\"2017-05-24\"\n//         className={classes.textField}\n//         InputLabelProps={{\n//           shrink: true,\n//         }}\n//       />\n//     </form>\n//   );\n// }\n// class AddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { \n//             cust_name: '',\n//             cust_no:'',\n//             inv_no: '',\n//             inv_amt:''\n//          }\n//     }\n//     handlecustname =(e) =>{\n//         this.setState({\n//             cust_name: e.target.value\n//         })\n//     }\n//     handlecustno =(e) =>{\n//         this.setState({\n//             cust_no: e.target.value\n//         })\n//     }\n//     handleinvno =(e) =>{\n//         this.setState({\n//             inv_no: e.target.value\n//         })\n//     }\n//     handleinvamt =(e) =>{\n//         this.setState({\n//             inv_amt: e.target.value\n//         })\n//     }\n//     render() { \n//         return (  \n//             < div style={{padding:'5px', display: \"flex\"}}>\n//                <div style={{padding:'5px', display: \"block\"}}>\n//                 <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Customer Name</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\"  value={this.cust_name} onChange={this.handlecustname} required  />\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Customer Number</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.cust_no} onChange={this.handlecustno} required/>\n//                     <FormHelperText id=\"my-helper-text\">We'll never share your Number</FormHelperText>\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Invoice Number</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_no} onChange={this.handleinvno} required/>\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Invoice Amount</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_amt} onChange={this.handleinvamt} required/>\n//                 </FormControl>\n//                </div>\n//                <div style={{padding:'5px', display: \"block\"}}>\n//                     <FormControl >\n//                     Due Date : <DatePickers />\n//                 </FormControl>\n//                 <FormControl>\n//                   Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\n//                   </FormControl>\n//                </div>\n//             </div>\n//         );\n//     }\n// }\n// export default AddForm;\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { TextareaAutosize, ThemeProvider } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MaterialUIPickers({\n  date,\n  handleChange\n}) {\n  _s();\n\n  // The first commit of Material-UI\n  // console.log(date);\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = d => {\n    // console.log(d);\n    setSelectedDate(d); // handleChange(d);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-around\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"MM/dd/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        label: \"Date picker inline\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MaterialUIPickers, \"Vy55wKq00J3tsSE3O7+xqVlL9eE=\");\n\n_c = MaterialUIPickers;\n\nclass SimpleFormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        cust_name: '',\n        cust_no: '',\n        inv_no: '',\n        inv_amt: '',\n        date: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = e => {// this.setState({ submitted: true }, () => {\n      //     setTimeout(() => this.setState({ submitted: false }), 5000);\n      // });\n    };\n  }\n\n  render() {\n    const {\n      formData,\n      date,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        style: {\n          padding: '5px',\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '5px',\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Customer Name\",\n            onChange: this.handleChange,\n            name: \"cust_name\",\n            value: formData.cust_name,\n            validators: ['required', 'isString'],\n            errorMessages: ['this field is required', 'Please Enter Name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Customer Number\",\n            onChange: this.handleChange,\n            name: \"cust_no\",\n            value: formData.cust_no,\n            validators: ['required', 'isNumber'],\n            errorMessages: ['this field is required', 'Please Customer Number']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Invoice Number\",\n            onChange: this.handleChange,\n            name: \"inv_no\",\n            value: formData.inv_no,\n            validators: ['required', 'isNumber'],\n            errorMessages: ['this field is required', 'Please Valid Invoice  Number']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            label: \"Invoice Amount\",\n            onChange: this.handleChange,\n            name: \"inv_amt\",\n            value: formData.inv_amt,\n            validators: ['required', 'isNumber', 'isFloat'],\n            errorMessages: ['this field is required', 'Please Amount  Number']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '5px',\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(MaterialUIPickers, {\n            date: this.state.date,\n            onChange: this.state.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), \"Notes: \", /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            id: \"outlined-basic\",\n            label: \"Notes\",\n            variant: \"outlined\",\n            rowsMin: 10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        disabled: submitted,\n        children: submitted && 'Your Invoice is Added!' || !submitted && 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SimpleFormExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIPickers\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/addform.jsx"],"names":["React","Button","ValidatorForm","TextValidator","TextareaAutosize","ThemeProvider","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","MaterialUIPickers","date","handleChange","selectedDate","setSelectedDate","useState","Date","handleDateChange","d","SimpleFormExample","Component","state","formData","cust_name","cust_no","inv_no","inv_amt","submitted","event","console","log","target","value","name","setState","handleSubmit","e","render","padding","display"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,mBAAhD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,UAAP;AAGA,SACEC,uBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,sBAJP;;;AAMA,SAASC,iBAAT,CAA2B;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAA3B,EAAiD;AAAA;;AAC/C;AACA;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,KAAK,CAACgB,QAAN,CAAe,IAAIC,IAAJ,CAAS,qBAAT,CAAf,CAAxC;;AAEA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B;AACAJ,IAAAA,eAAe,CAACI,CAAD,CAAf,CAF8B,CAG9B;AAED,GALD;;AAMA,sBACE,QAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEZ,YAAhC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,cAAxB;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,cAAc,MADhB;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","sourcesContent":["// import React, { Component } from 'react';\r\n// import { FormControl ,InputLabel ,Input ,FormHelperText } from '@material-ui/core';\r\n// import { TextareaAutosize } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import TextField from '@material-ui/core/TextField';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   container: {\r\n//     display: 'flex',\r\n//     flexWrap: 'wrap',\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 200,\r\n//   },\r\n// }));\r\n\r\n//  function DatePickers() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <form className={classes.container} noValidate>\r\n//       <TextField\r\n//         id=\"date\"\r\n//         label=\"Birthday\"\r\n//         type=\"date\"\r\n//         defaultValue=\"2017-05-24\"\r\n//         className={classes.textField}\r\n//         InputLabelProps={{\r\n//           shrink: true,\r\n//         }}\r\n//       />\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n// class AddForm extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { \r\n//             cust_name: '',\r\n//             cust_no:'',\r\n//             inv_no: '',\r\n//             inv_amt:''\r\n//          }\r\n//     }\r\n//     handlecustname =(e) =>{\r\n//         this.setState({\r\n//             cust_name: e.target.value\r\n//         })\r\n//     }\r\n//     handlecustno =(e) =>{\r\n//         this.setState({\r\n//             cust_no: e.target.value\r\n//         })\r\n//     }\r\n//     handleinvno =(e) =>{\r\n//         this.setState({\r\n//             inv_no: e.target.value\r\n//         })\r\n//     }\r\n//     handleinvamt =(e) =>{\r\n//         this.setState({\r\n//             inv_amt: e.target.value\r\n//         })\r\n//     }\r\n//     render() { \r\n//         return (  \r\n//             < div style={{padding:'5px', display: \"flex\"}}>\r\n//                <div style={{padding:'5px', display: \"block\"}}>\r\n//                 <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Customer Name</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\"  value={this.cust_name} onChange={this.handlecustname} required  />\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Customer Number</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.cust_no} onChange={this.handlecustno} required/>\r\n//                     <FormHelperText id=\"my-helper-text\">We'll never share your Number</FormHelperText>\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Invoice Number</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_no} onChange={this.handleinvno} required/>\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Invoice Amount</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_amt} onChange={this.handleinvamt} required/>\r\n//                 </FormControl>\r\n//                </div>\r\n//                <div style={{padding:'5px', display: \"block\"}}>\r\n//                     <FormControl >\r\n//                     Due Date : <DatePickers />\r\n//                 </FormControl>\r\n//                 <FormControl>\r\n//                   Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\r\n//                   </FormControl>\r\n//                </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n \r\n// export default AddForm;\r\n\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { TextareaAutosize, ThemeProvider } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\n\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction MaterialUIPickers({date, handleChange}) {\r\n  // The first commit of Material-UI\r\n  // console.log(date);\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (d) => {\r\n    // console.log(d);\r\n    setSelectedDate(d);\r\n    // handleChange(d);\r\n\r\n  };\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label=\"Date picker inline\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nclass SimpleFormExample extends React.Component {\r\n        state = {\r\n        formData : { \r\n                    cust_name: '',\r\n                    cust_no:'',\r\n                    inv_no: '',\r\n                    inv_amt:'',\r\n                    date:''\r\n                 },\r\n        submitted: false,\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      console.log(event.target.value);\r\n        const { formData } = this.state;\r\n        formData[event.target.name] = event.target.value;\r\n        this.setState({ formData });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        // this.setState({ submitted: true }, () => {\r\n        //     setTimeout(() => this.setState({ submitted: false }), 5000);\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        const { formData,  date, submitted } = this.state;\r\n        return (\r\n            <div>\r\n              <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmit} style={{padding:'5px', display: \"flex\"}}\r\n            >\r\n               <div  style={{padding:'5px', display: \"block\"}}>\r\n                <TextValidator\r\n                      label=\"Customer Name\"\r\n                      onChange={this.handleChange}\r\n                      name=\"cust_name\"\r\n                      value={formData.cust_name}\r\n                      validators={['required', 'isString']}\r\n                      errorMessages={['this field is required', 'Please Enter Name']}\r\n                  />\r\n                  <TextValidator\r\n                      label=\"Customer Number\"\r\n                      onChange={this.handleChange}\r\n                      name=\"cust_no\"\r\n                      value={formData.cust_no}\r\n                      validators={['required' , 'isNumber']}\r\n                      errorMessages={['this field is required', 'Please Customer Number']}\r\n                  />\r\n                  <TextValidator\r\n                      label=\"Invoice Number\"\r\n                      onChange={this.handleChange}\r\n                      name=\"inv_no\"\r\n                      value={formData.inv_no}\r\n                      validators={['required' , 'isNumber']}\r\n                      errorMessages={['this field is required', 'Please Valid Invoice  Number']}\r\n                  />\r\n                  <TextValidator\r\n                      label=\"Invoice Amount\"\r\n                      onChange={this.handleChange}\r\n                      name=\"inv_amt\"\r\n                      value={formData.inv_amt}\r\n                      validators={['required' , 'isNumber','isFloat']}\r\n                      errorMessages={['this field is required', 'Please Amount  Number']}\r\n                  />\r\n               </div>\r\n                <div style={{padding:'5px', display: \"block\"}}>\r\n                <MaterialUIPickers date={this.state.date}  onChange={this.state.handleChange}/>\r\n                  Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\r\n                </div>\r\n            </ValidatorForm>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    disabled={submitted}\r\n                >\r\n                    {\r\n                        (submitted && 'Your Invoice is Added!')\r\n                        || (!submitted && 'Submit')\r\n                    }\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default  SimpleFormExample;"]},"metadata":{},"sourceType":"module"}