{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\addform.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { TextareaAutosize } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport \"date-fns\";\nimport Snackbar from \"@material-ui/core/snackbar\";\nimport InvoiceTable from \"./table\";\nimport Button from \"@material-ui/core/Button\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MaterialUIPickers({\n  date,\n  handleDate\n}) {\n  _s();\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date(\"2014-08-18\"));\n\n  const handleDateChange = d => {\n    setSelectedDate(d);\n    date = selectedDate;\n    handleDate(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-around\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        variant: \"inline\",\n        format: \"MM/dd/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        name: \"selectedDate\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        KeyboardButtonProps: {\n          \"aria-label\": \"change date\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MaterialUIPickers, \"4kMFG9kxWydi6Zh/jVLWxuIX4nA=\");\n\n_c = MaterialUIPickers;\n\nconst AddForm = ({\n  btn,\n  handleBtn\n}) => {\n  _s2();\n\n  const [formData, setFormData] = React.useState({\n    cust_name: \"\",\n    cust_no: \"\",\n    inv_no: \"\",\n    inv_amt: \"\",\n    date: \"\",\n    notes: \"\"\n  });\n\n  const handleDate = d => {\n    console.log(d);\n    let v = d.toString();\n    setFormData({\n      date: v\n    });\n    console.log(this.state.formData);\n  };\n\n  const handleChange = e => {\n    if (e.target.value.length > 0) {\n      btn = false;\n    } // setFormData({formData[e.target.name]: e.target.value});\n\n  }; // handleSubmit = (e) => {\n  //   console.log(e.target.value);\n  //   this.setState({ submitted: true }, () => {\n  //     setTimeout(() => this.setState({ submitted: false }), 5000);\n  //   });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      style: {\n        padding: \"5px\",\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"5px\",\n          display: \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\",\n              padding: \"5px\"\n            },\n            children: [\" \", \"Customer Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            onChange: handleChange,\n            size: \"small\",\n            variant: \"outlined\",\n            name: \"cust_name\",\n            validators: [\"required\", \"isString\"],\n            errorMessages: [\"this field is required\", \"Please Enter Name\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            children: \" Customer Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            onChange: handleChange,\n            variant: \"outlined\",\n            size: \"small\",\n            name: \"cust_no\",\n            validators: [\"required\", \"isNumber\"],\n            errorMessages: [\"this field is required\", \"Please Enter Customer Number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fintSize: \"15px\"\n            },\n            children: \" Invoice Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: handleChange,\n            name: \"inv_no\",\n            validators: [\"required\", \"isNumber\"],\n            errorMessages: [\"this field is required\", \"Please Valid Invoice  Number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            children: \"Invoice Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n            variant: \"outlined\",\n            size: \"small\",\n            onChange: handleChange,\n            name: \"inv_amt\",\n            validators: [\"required\", \"isNumber\", \"isFloat\"],\n            errorMessages: [\"this field is required\", \"Please Amount  Number\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: \"20px\",\n          display: \"block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            children: \"Date Picker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MaterialUIPickers, {\n            name: \"date\",\n            date: this.state.date,\n            handleDate: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"20px\",\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: \"15px\"\n            },\n            children: \"Notes: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            id: \"outlined-basic\",\n            label: \"Notes\",\n            variant: \"outlined\",\n            rowsMin: 10,\n            name: \"notes\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(AddForm, \"uo+GfnK09DqySOQ1dmymha+m1OE=\");\n\n_c2 = AddForm;\nexport default AddForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MaterialUIPickers\");\n$RefreshReg$(_c2, \"AddForm\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/addform.jsx"],"names":["React","ValidatorForm","TextValidator","TextareaAutosize","Grid","DateFnsUtils","Snackbar","InvoiceTable","Button","MuiPickersUtilsProvider","KeyboardDatePicker","MaterialUIPickers","date","handleDate","selectedDate","setSelectedDate","useState","Date","handleDateChange","d","AddForm","btn","handleBtn","formData","setFormData","cust_name","cust_no","inv_no","inv_amt","notes","console","log","v","toString","state","handleChange","e","target","value","length","handleSubmit","padding","display","fontSize","fintSize","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport \"date-fns\";\r\nimport Snackbar from \"@material-ui/core/snackbar\";\r\nimport InvoiceTable from \"./table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction MaterialUIPickers({ date, handleDate }) {\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2014-08-18\")\r\n  );\r\n\r\n  const handleDateChange = (d) => {\r\n    setSelectedDate(d);\r\n    date = selectedDate;\r\n    handleDate(date);\r\n  };\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          name=\"selectedDate\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\nconst AddForm= ({btn, handleBtn})=> {\r\n\r\n  const [formData, setFormData]= React.useState({\r\n    cust_name: \"\",\r\n    cust_no: \"\",\r\n    inv_no: \"\",\r\n    inv_amt: \"\",\r\n    date: \"\",\r\n    notes: \"\",\r\n});\r\n  const handleDate = (d) => {\r\n    console.log(d);\r\n    let v= d.toString();\r\n    setFormData({date: v });\r\n    console.log(this.state.formData);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.value.length >0)\r\n    {\r\n      btn=false;\r\n    }\r\n    // setFormData({formData[e.target.name]: e.target.value});\r\n  };\r\n\r\n  // handleSubmit = (e) => {\r\n  //   console.log(e.target.value);\r\n  //   this.setState({ submitted: true }, () => {\r\n  //     setTimeout(() => this.setState({ submitted: false }), 5000);\r\n  //   });\r\n  // };\r\n    return (\r\n      <div>\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleSubmit}\r\n          style={{ padding: \"5px\", display: \"flex\" }}\r\n        >\r\n          <div style={{ padding: \"5px\", display: \"block\" }}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <span style={{ fontSize: \"15px\", padding: \"5px\" }}>\r\n                {\" \"}\r\n                Customer Name\r\n              </span>\r\n              <TextValidator\r\n                onChange={handleChange}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"cust_name\"\r\n                validators={[\"required\", \"isString\"]}\r\n                errorMessages={[\"this field is required\", \"Please Enter Name\"]}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fontSize: \"15px\" }}> Customer Number</span>\r\n              <TextValidator\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                name=\"cust_no\"\r\n                validators={[\"required\", \"isNumber\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"Please Enter Customer Number\",\r\n                ]}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fintSize: \"15px\" }}> Invoice Number</span>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={handleChange}\r\n                name=\"inv_no\"\r\n                validators={[\"required\", \"isNumber\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"Please Valid Invoice  Number\",\r\n                ]}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fontSize: \"15px\" }}>Invoice Amount</span>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={handleChange}\r\n                name=\"inv_amt\"\r\n                validators={[\"required\", \"isNumber\", \"isFloat\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"Please Amount  Number\",\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingLeft: \"20px\", display: \"block\" }}>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fontSize: \"15px\" }}>Date Picker</span>\r\n              <MaterialUIPickers\r\n                name=\"date\"\r\n                date={this.state.date}\r\n                handleDate={handleChange}\r\n              />\r\n            </div>\r\n            <div style={{ paddingLeft: \"20px\", display: \"block\" }}>\r\n              <span style={{ fontSize: \"15px\" }}>Notes: </span>\r\n              <TextareaAutosize\r\n                id=\"outlined-basic\"\r\n                label=\"Notes\"\r\n                variant=\"outlined\"\r\n                rowsMin={10}\r\n                name=\"notes\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ValidatorForm>\r\n      </div>\r\n    );\r\n  }\r\nexport default AddForm;\r\n"]},"metadata":{},"sourceType":"module"}