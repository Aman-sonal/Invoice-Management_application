{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\addform.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from 'react';\n// import { FormControl ,InputLabel ,Input ,FormHelperText } from '@material-ui/core';\n// import { TextareaAutosize } from '@material-ui/core';\n// import { makeStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\n// const useStyles = makeStyles((theme) => ({\n//   container: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 200,\n//   },\n// }));\n//  function DatePickers() {\n//   const classes = useStyles();\n//   return (\n//     <form className={classes.container} noValidate>\n//       <TextField\n//         id=\"date\"\n//         label=\"Birthday\"\n//         type=\"date\"\n//         defaultValue=\"2017-05-24\"\n//         className={classes.textField}\n//         InputLabelProps={{\n//           shrink: true,\n//         }}\n//       />\n//     </form>\n//   );\n// }\n// class AddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { \n//             cust_name: '',\n//             cust_no:'',\n//             inv_no: '',\n//             inv_amt:''\n//          }\n//     }\n//     handlecustname =(e) =>{\n//         this.setState({\n//             cust_name: e.target.value\n//         })\n//     }\n//     handlecustno =(e) =>{\n//         this.setState({\n//             cust_no: e.target.value\n//         })\n//     }\n//     handleinvno =(e) =>{\n//         this.setState({\n//             inv_no: e.target.value\n//         })\n//     }\n//     handleinvamt =(e) =>{\n//         this.setState({\n//             inv_amt: e.target.value\n//         })\n//     }\n//     render() { \n//         return (  \n//             < div style={{padding:'5px', display: \"flex\"}}>\n//                <div style={{padding:'5px', display: \"block\"}}>\n//                 <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Customer Name</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\"  value={this.cust_name} onChange={this.handlecustname} required  />\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Customer Number</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.cust_no} onChange={this.handlecustno} required/>\n//                     <FormHelperText id=\"my-helper-text\">We'll never share your Number</FormHelperText>\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Invoice Number</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_no} onChange={this.handleinvno} required/>\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Invoice Amount</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_amt} onChange={this.handleinvamt} required/>\n//                 </FormControl>\n//                </div>\n//                <div style={{padding:'5px', display: \"block\"}}>\n//                     <FormControl >\n//                     Due Date : <DatePickers />\n//                 </FormControl>\n//                 <FormControl>\n//                   Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\n//                   </FormControl>\n//                </div>\n//             </div>\n//         );\n//     }\n// }\n// export default AddForm;\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { TextareaAutosize, ThemeProvider } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\nimport Snackbar from '@material-ui/core/snackbar';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MaterialUIPickers({\n  date,\n  handleChange\n}) {\n  _s();\n\n  // The first commit of Material-UI\n  console.log(date);\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = d => {\n    console.log(d);\n    setSelectedDate(d);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-around\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        disableToolbar: true,\n        variant: \"inline\",\n        format: \"MM/dd/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MaterialUIPickers, \"Vy55wKq00J3tsSE3O7+xqVlL9eE=\");\n\n_c = MaterialUIPickers;\n\nclass AddForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        cust_name: '',\n        cust_no: '',\n        inv_no: '',\n        inv_amt: '',\n        date: '',\n        notes: '',\n        snackbaropen: false,\n        snackbarmsg: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = e => {\n      console.log(e.target.value);\n      this.setState({\n        snackbaropen: true,\n        snackbarmsg: 'Successfully Added'\n      });\n      console.log(this.state.snackbaropen, this.state.snackbarmsg);\n      this.setState({\n        submitted: true\n      }, () => {\n        setTimeout(() => this.setState({\n          submitted: false\n        }), 5000);\n      });\n    };\n\n    this.snackbarClose = e => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: 'Ã§enter'\n      },\n      open: this.state.snackbaropen,\n      autoHideDuration: 3000,\n      onClose: this.snackbarClose,\n      message: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"msg-id\",\n        children: this.state.snackbarmsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n\n    const {\n      formData,\n      date,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        style: {\n          padding: '5px',\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '5px',\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\",\n                padding: '5px'\n              },\n              children: \" Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              onChange: this.handleChange,\n              size: \"small\",\n              variant: \"outlined\",\n              name: \"cust_name\",\n              value: formData.cust_name,\n              validators: ['required', 'isString'],\n              errorMessages: ['this field is required', 'Please Enter Name']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 86\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \" Customer Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              onChange: this.handleChange,\n              variant: \"outlined\",\n              size: \"small\",\n              name: \"cust_no\",\n              value: formData.cust_no,\n              validators: ['required', 'isNumber'],\n              errorMessages: ['this field is required', 'Please Customer Number']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fintSize: \"15px\"\n              },\n              children: \" Invoice Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              size: \"small\",\n              onChange: this.handleChange,\n              name: \"inv_no\",\n              value: formData.inv_no,\n              validators: ['required', 'isNumber'],\n              errorMessages: ['this field is required', 'Please Valid Invoice  Number']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 75\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Invoice Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              size: \"small\",\n              onChange: this.handleChange,\n              name: \"inv_amt\",\n              value: formData.inv_amt,\n              validators: ['required', 'isNumber', 'isFloat'],\n              errorMessages: ['this field is required', 'Please Amount  Number']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: '20px',\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Date Picker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(MaterialUIPickers, {\n              date: this.state.date,\n              onChange: this.state.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: '20px',\n              display: \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Notes: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              id: \"outlined-basic\",\n              label: \"Notes\",\n              variant: \"outlined\",\n              rowsMin: 10,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIPickers\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/addform.jsx"],"names":["React","Button","ValidatorForm","TextValidator","TextareaAutosize","ThemeProvider","Grid","DateFnsUtils","Snackbar","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","MaterialUIPickers","date","handleChange","console","log","selectedDate","setSelectedDate","useState","Date","handleDateChange","d","AddForm","Component","state","formData","cust_name","cust_no","inv_no","inv_amt","notes","snackbaropen","snackbarmsg","submitted","event","target","value","name","setState","handleSubmit","e","setTimeout","snackbarClose","render","vertical","horizontal","padding","display","fontSize","fintSize","paddingLeft"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,mBAAhD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,UAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,SACEC,uBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,sBAJP;;;AAMA,SAASC,iBAAT,CAA2B;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAA3B,EAAiD;AAAA;;AAC/C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkClB,KAAK,CAACmB,QAAN,CAAe,IAAIC,IAAJ,CAAS,qBAAT,CAAf,CAAxC;;AAEA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACAJ,IAAAA,eAAe,CAACI,CAAD,CAAf;AACD,GAHD;;AAIA,sBACE,QAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEf,YAAhC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,cAAxB;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,cAAc,MADhB;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,MAAM,EAAC,YAHT;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,EAAE,EAAC,oBALL;AAME,QAAA,KAAK,EAAEU,YANT;AAOE,QAAA,QAAQ,EAAEI,gBAPZ;AAQE,QAAA,mBAAmB,EAAE;AACnB,wBAAc;AADK;AARvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA3BQT,iB;;KAAAA,iB;;AA6BT,MAAMW,OAAN,SAAsBvB,KAAK,CAACwB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACRC,MAAAA,QAAQ,EAAG;AACCC,QAAAA,SAAS,EAAE,EADZ;AAECC,QAAAA,OAAO,EAAC,EAFT;AAGCC,QAAAA,MAAM,EAAE,EAHT;AAICC,QAAAA,OAAO,EAAC,EAJT;AAKCjB,QAAAA,IAAI,EAAC,EALN;AAMCkB,QAAAA,KAAK,EAAC,EANP;AAOCC,QAAAA,YAAY,EAAE,KAPf;AAQCC,QAAAA,WAAW,EAAE;AARd,OADH;AAWRC,MAAAA,SAAS,EAAE;AAXH,KADsB;;AAAA,SAelCpB,YAfkC,GAelBqB,KAAD,IAAW;AACxBpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACE,YAAM;AAAEX,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACAC,MAAAA,QAAQ,CAACS,KAAK,CAACC,MAAN,CAAaE,IAAd,CAAR,GAA8BH,KAAK,CAACC,MAAN,CAAaC,KAA3C;AACA,WAAKE,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACH,KApBiC;;AAAA,SAsBlCc,YAtBkC,GAsBlBC,CAAD,IAAO;AACpB1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,CAAC,CAACL,MAAF,CAASC,KAArB;AACA,WAAKE,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAG,IAAhB;AAAsBC,QAAAA,WAAW,EAAC;AAAlC,OAAd;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWO,YAAvB,EAAoC,KAAKP,KAAL,CAAWQ,WAA/C;AACE,WAAKM,QAAL,CAAc;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,MAAM;AACrCQ,QAAAA,UAAU,CAAC,MAAM,KAAKH,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAP,EAA4C,IAA5C,CAAV;AACH,OAFD;AAGH,KA7BiC;;AAAA,SA8BlCS,aA9BkC,GA8BlBF,CAAD,IAAM;AACnB,WAAKF,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAC;AAAd,OAAd;AACD,KAhCiC;AAAA;;AAmClCY,EAAAA,MAAM,GAAG;AACP;AAAA,YAAC,QAAD;AAAU,MAAA,YAAY,EAAE;AAACC,QAAAA,QAAQ,EAAC,QAAV;AAAoBC,QAAAA,UAAU,EAAC;AAA/B,OAAxB;AACM,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWO,YADvB;AAEM,MAAA,gBAAgB,EAAE,IAFxB;AAGM,MAAA,OAAO,EAAE,KAAKW,aAHpB;AAIM,MAAA,OAAO,eAAE;AAAM,QAAA,EAAE,EAAE,QAAV;AAAA,kBAAoB,KAAKlB,KAAL,CAAWQ;AAA/B;AAAA;AAAA;AAAA;AAAA;AAJf;AAAA;AAAA;AAAA;AAAA;;AAKE,UAAM;AAAEP,MAAAA,QAAF;AAAab,MAAAA,IAAb;AAAmBqB,MAAAA;AAAnB,QAAiC,KAAKT,KAA5C;AACA,wBACI;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,GAAG,EAAC,MADN;AAEE,QAAA,QAAQ,EAAE,KAAKe,YAFjB;AAE+B,QAAA,KAAK,EAAE;AAACO,UAAAA,OAAO,EAAC,KAAT;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAFtC;AAAA,gCAIC;AAAM,UAAA,KAAK,EAAE;AAACD,YAAAA,OAAO,EAAC,KAAT;AAAgBC,YAAAA,OAAO,EAAE;AAAzB,WAAb;AAAA,kCACD;AAAK,YAAA,KAAK,EAAE;AAACA,cAAAA,OAAO,EAAC;AAAT,aAAZ;AAAA,oCACI;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,QAAQ,EAAC,MAAV;AAAiBF,gBAAAA,OAAO,EAAC;AAAzB,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eACuE,QAAC,aAAD;AAC/D,cAAA,QAAQ,EAAE,KAAKjC,YADgD;AAE/D,cAAA,IAAI,EAAC,OAF0D;AAG/D,cAAA,OAAO,EAAC,UAHuD;AAI/D,cAAA,IAAI,EAAC,WAJ0D;AAK/D,cAAA,KAAK,EAAEY,QAAQ,CAACC,SAL+C;AAM/D,cAAA,UAAU,EAAE,CAAC,UAAD,EAAa,UAAb,CANmD;AAO/D,cAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,mBAA3B;AAPgD;AAAA;AAAA;AAAA;AAAA,oBADvE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,eAYE;AAAK,YAAA,KAAK,EAAE;AAACqB,cAAAA,OAAO,EAAC,MAAT;AAAgBD,cAAAA,OAAO,EAAC;AAAxB,aAAZ;AAAA,oCACA;AAAM,cAAA,KAAK,EAAE;AAACE,gBAAAA,QAAQ,EAAC;AAAV,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eACuD,QAAC,aAAD;AAChD,cAAA,QAAQ,EAAE,KAAKnC,YADiC;AAEhD,cAAA,OAAO,EAAC,UAFwC;AAGhD,cAAA,IAAI,EAAC,OAH2C;AAIhD,cAAA,IAAI,EAAC,SAJ2C;AAKhD,cAAA,KAAK,EAAEY,QAAQ,CAACE,OALgC;AAMhD,cAAA,UAAU,EAAE,CAAC,UAAD,EAAc,UAAd,CANoC;AAOhD,cAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,wBAA3B;AAPiC;AAAA;AAAA;AAAA;AAAA,oBADvD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAuBG;AAAK,YAAA,KAAK,EAAE;AAACoB,cAAAA,OAAO,EAAE,MAAV;AAAkBD,cAAAA,OAAO,EAAE;AAA3B,aAAZ;AAAA,oCACA;AAAM,cAAA,KAAK,EAAG;AAACG,gBAAAA,QAAQ,EAAE;AAAX,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eACwD,QAAC,aAAD;AACpD,cAAA,OAAO,EAAC,UAD4C;AAEpD,cAAA,IAAI,EAAC,OAF+C;AAGpD,cAAA,QAAQ,EAAE,KAAKpC,YAHqC;AAIpD,cAAA,IAAI,EAAC,QAJ+C;AAKpD,cAAA,KAAK,EAAEY,QAAQ,CAACG,MALoC;AAMpD,cAAA,UAAU,EAAE,CAAC,UAAD,EAAc,UAAd,CANwC;AAOpD,cAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,8BAA3B;AAPqC;AAAA;AAAA;AAAA;AAAA,oBADxD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBH,eAkCG;AAAK,YAAA,KAAK,EAAE;AAACmB,cAAAA,OAAO,EAAC,MAAT;AAAiBD,cAAAA,OAAO,EAAC;AAAzB,aAAZ;AAAA,oCACA;AAAM,cAAA,KAAK,EAAE;AAACE,gBAAAA,QAAQ,EAAE;AAAX,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eACsD,QAAC,aAAD;AAClD,cAAA,OAAO,EAAC,UAD0C;AAElD,cAAA,IAAI,EAAC,OAF6C;AAGlD,cAAA,QAAQ,EAAE,KAAKnC,YAHmC;AAIlD,cAAA,IAAI,EAAC,SAJ6C;AAKlD,cAAA,KAAK,EAAEY,QAAQ,CAACI,OALkC;AAMlD,cAAA,UAAU,EAAE,CAAC,UAAD,EAAc,UAAd,EAAyB,SAAzB,CANsC;AAOlD,cAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,uBAA3B;AAPmC;AAAA;AAAA;AAAA;AAAA,oBADtD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,eAkDE;AAAK,UAAA,KAAK,EAAE;AAACqB,YAAAA,WAAW,EAAC,MAAb;AAAqBH,YAAAA,OAAO,EAAE;AAA9B,WAAZ;AAAA,kCACD;AAAK,YAAA,KAAK,EAAE;AAACA,cAAAA,OAAO,EAAE,MAAV;AAAkBD,cAAAA,OAAO,EAAC;AAA1B,aAAZ;AAAA,oCACA;AAAM,cAAA,KAAK,EAAE;AAACE,gBAAAA,QAAQ,EAAE;AAAX,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eACmD,QAAC,iBAAD;AAAmB,cAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWZ,IAApC;AAA2C,cAAA,QAAQ,EAAE,KAAKY,KAAL,CAAWX;AAAhE;AAAA;AAAA;AAAA;AAAA,oBADnD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,eAID;AAAK,YAAA,KAAK,EAAE;AAACqC,cAAAA,WAAW,EAAC,MAAb;AAAqBH,cAAAA,OAAO,EAAE;AAA9B,aAAZ;AAAA,oCACG;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,QAAQ,EAAE;AAAX,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,eACkD,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAC,gBAArB;AAAsC,cAAA,KAAK,EAAC,OAA5C;AAAoD,cAAA,OAAO,EAAC,UAA5D;AAAuE,cAAA,OAAO,EAAE,EAAhF;AAAoF,cAAA,QAAQ,EAAE,KAAKnC;AAAnG;AAAA;AAAA;AAAA;AAAA,oBADlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AA+DH;;AAzGiC;;AA2GtC,eAAgBS,OAAhB","sourcesContent":["// import React, { Component } from 'react';\r\n// import { FormControl ,InputLabel ,Input ,FormHelperText } from '@material-ui/core';\r\n// import { TextareaAutosize } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import TextField from '@material-ui/core/TextField';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   container: {\r\n//     display: 'flex',\r\n//     flexWrap: 'wrap',\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 200,\r\n//   },\r\n// }));\r\n\r\n//  function DatePickers() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <form className={classes.container} noValidate>\r\n//       <TextField\r\n//         id=\"date\"\r\n//         label=\"Birthday\"\r\n//         type=\"date\"\r\n//         defaultValue=\"2017-05-24\"\r\n//         className={classes.textField}\r\n//         InputLabelProps={{\r\n//           shrink: true,\r\n//         }}\r\n//       />\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n// class AddForm extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { \r\n//             cust_name: '',\r\n//             cust_no:'',\r\n//             inv_no: '',\r\n//             inv_amt:''\r\n//          }\r\n//     }\r\n//     handlecustname =(e) =>{\r\n//         this.setState({\r\n//             cust_name: e.target.value\r\n//         })\r\n//     }\r\n//     handlecustno =(e) =>{\r\n//         this.setState({\r\n//             cust_no: e.target.value\r\n//         })\r\n//     }\r\n//     handleinvno =(e) =>{\r\n//         this.setState({\r\n//             inv_no: e.target.value\r\n//         })\r\n//     }\r\n//     handleinvamt =(e) =>{\r\n//         this.setState({\r\n//             inv_amt: e.target.value\r\n//         })\r\n//     }\r\n//     render() { \r\n//         return (  \r\n//             < div style={{padding:'5px', display: \"flex\"}}>\r\n//                <div style={{padding:'5px', display: \"block\"}}>\r\n//                 <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Customer Name</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\"  value={this.cust_name} onChange={this.handlecustname} required  />\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Customer Number</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.cust_no} onChange={this.handlecustno} required/>\r\n//                     <FormHelperText id=\"my-helper-text\">We'll never share your Number</FormHelperText>\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Invoice Number</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_no} onChange={this.handleinvno} required/>\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Invoice Amount</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_amt} onChange={this.handleinvamt} required/>\r\n//                 </FormControl>\r\n//                </div>\r\n//                <div style={{padding:'5px', display: \"block\"}}>\r\n//                     <FormControl >\r\n//                     Due Date : <DatePickers />\r\n//                 </FormControl>\r\n//                 <FormControl>\r\n//                   Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\r\n//                   </FormControl>\r\n//                </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n \r\n// export default AddForm;\r\n\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { TextareaAutosize, ThemeProvider } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\nimport Snackbar from '@material-ui/core/snackbar';\r\n\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction MaterialUIPickers({date, handleChange}) {\r\n  // The first commit of Material-UI\r\n  console.log(date);\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (d) => {\r\n    console.log(d);\r\n    setSelectedDate(d);\r\n  };\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nclass AddForm extends React.Component {\r\n        state = {\r\n        formData : { \r\n                    cust_name: '',\r\n                    cust_no:'',\r\n                    inv_no: '',\r\n                    inv_amt:'',\r\n                    date:'',\r\n                    notes:'',\r\n                    snackbaropen: false,\r\n                    snackbarmsg: ''\r\n                 },\r\n        submitted: false,\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      console.log(event.target.value);\r\n        const { formData } = this.state;\r\n        formData[event.target.name] = event.target.value;\r\n        this.setState({ formData });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      console.log(e.target.value);\r\n      this.setState({snackbaropen : true, snackbarmsg:'Successfully Added'});\r\n      console.log(this.state.snackbaropen,this.state.snackbarmsg);\r\n        this.setState({ submitted: true }, () => {\r\n            setTimeout(() => this.setState({ submitted: false }), 5000);\r\n        });\r\n    }\r\n    snackbarClose= (e) =>{\r\n      this.setState({snackbaropen:false});\r\n    };\r\n\r\n\r\n    render() {\r\n      <Snackbar anchorOrigin={{vertical:\"bottom\", horizontal:'Ã§enter'}}\r\n            open={this.state.snackbaropen}\r\n            autoHideDuration={3000}\r\n            onClose={this.snackbarClose}\r\n            message={<span id ='msg-id'>{this.state.snackbarmsg}</span>} />\r\n        const { formData,  date, submitted } = this.state;\r\n        return (\r\n            <div>\r\n              <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmit} style={{padding:'5px', display: \"flex\"}}\r\n            >\r\n               <div  style={{padding:'5px', display: \"block\"}}>\r\n              <div style={{display:\"flex\"}}>\r\n                  <span style={{fontSize:\"15px\",padding:'5px'}}> Customer Name</span><TextValidator\r\n                      onChange={this.handleChange}\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      name=\"cust_name\"\r\n                      value={formData.cust_name}\r\n                      validators={['required', 'isString']}\r\n                      errorMessages={['this field is required', 'Please Enter Name']}\r\n                  />\r\n              </div>\r\n                 <div style={{display:\"flex\",padding:'5px'}}>\r\n                 <span style={{fontSize:\"15px\"}}> Customer Number</span><TextValidator\r\n                        onChange={this.handleChange}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"cust_no\"\r\n                        value={formData.cust_no}\r\n                        validators={['required' , 'isNumber']}\r\n                        errorMessages={['this field is required', 'Please Customer Number']}\r\n                    />\r\n                 </div>\r\n                  <div style={{display: \"flex\", padding: \"5px\"}}>\r\n                  <span style= {{fintSize: \"15px\"}}> Invoice Number</span><TextValidator\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onChange={this.handleChange}\r\n                      name=\"inv_no\"\r\n                      value={formData.inv_no}\r\n                      validators={['required' , 'isNumber']}\r\n                      errorMessages={['this field is required', 'Please Valid Invoice  Number']}\r\n                  />\r\n                  </div>\r\n                  <div style={{display:\"flex\", padding:\"5px\"}}>\r\n                  <span style={{fontSize: \"15px\"}}>Invoice Amount</span><TextValidator\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onChange={this.handleChange}\r\n                      name=\"inv_amt\"\r\n                      value={formData.inv_amt}\r\n                      validators={['required' , 'isNumber','isFloat']}\r\n                      errorMessages={['this field is required', 'Please Amount  Number']}\r\n                  />\r\n                  </div>\r\n               </div>\r\n                <div style={{paddingLeft:'20px', display: \"block\"}}>\r\n               <div style={{display: \"flex\", padding:\"5px\"}}>\r\n               <span style={{fontSize: \"15px\"}}>Date Picker</span><MaterialUIPickers date={this.state.date}  onChange={this.state.handleChange}/>\r\n               </div >\r\n               <div style={{paddingLeft:'20px', display: \"block\"}}>\r\n                  <span style={{fontSize: \"15px\"}}>Notes: </span><TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10} onChange={this.handleChange} />\r\n               </div>\r\n                </div>\r\n            </ValidatorForm>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default  AddForm;"]},"metadata":{},"sourceType":"module"}