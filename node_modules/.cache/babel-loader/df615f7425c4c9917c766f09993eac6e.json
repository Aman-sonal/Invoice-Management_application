{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\addform.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from 'react';\n// import { FormControl ,InputLabel ,Input ,FormHelperText } from '@material-ui/core';\n// import { TextareaAutosize } from '@material-ui/core';\n// import { makeStyles } from '@material-ui/core/styles';\n// import TextField from '@material-ui/core/TextField';\n// const useStyles = makeStyles((theme) => ({\n//   container: {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//   },\n//   textField: {\n//     marginLeft: theme.spacing(1),\n//     marginRight: theme.spacing(1),\n//     width: 200,\n//   },\n// }));\n//  function DatePickers() {\n//   const classes = useStyles();\n//   return (\n//     <form className={classes.container} noValidate>\n//       <TextField\n//         id=\"date\"\n//         label=\"Birthday\"\n//         type=\"date\"\n//         defaultValue=\"2017-05-24\"\n//         className={classes.textField}\n//         InputLabelProps={{\n//           shrink: true,\n//         }}\n//       />\n//     </form>\n//   );\n// }\n// class AddForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = { \n//             cust_name: '',\n//             cust_no:'',\n//             inv_no: '',\n//             inv_amt:''\n//          }\n//     }\n//     handlecustname =(e) =>{\n//         this.setState({\n//             cust_name: e.target.value\n//         })\n//     }\n//     handlecustno =(e) =>{\n//         this.setState({\n//             cust_no: e.target.value\n//         })\n//     }\n//     handleinvno =(e) =>{\n//         this.setState({\n//             inv_no: e.target.value\n//         })\n//     }\n//     handleinvamt =(e) =>{\n//         this.setState({\n//             inv_amt: e.target.value\n//         })\n//     }\n//     render() { \n//         return (  \n//             < div style={{padding:'5px', display: \"flex\"}}>\n//                <div style={{padding:'5px', display: \"block\"}}>\n//                 <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Customer Name</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\"  value={this.cust_name} onChange={this.handlecustname} required  />\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Customer Number</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.cust_no} onChange={this.handlecustno} required/>\n//                     <FormHelperText id=\"my-helper-text\">We'll never share your Number</FormHelperText>\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Invoice Number</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_no} onChange={this.handleinvno} required/>\n//                     </FormControl>\n//                     <FormControl>\n//                     <InputLabel htmlFor=\"my-input\">Invoice Amount</InputLabel>\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_amt} onChange={this.handleinvamt} required/>\n//                 </FormControl>\n//                </div>\n//                <div style={{padding:'5px', display: \"block\"}}>\n//                     <FormControl >\n//                     Due Date : <DatePickers />\n//                 </FormControl>\n//                 <FormControl>\n//                   Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\n//                   </FormControl>\n//                </div>\n//             </div>\n//         );\n//     }\n// }\n// export default AddForm;\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nfunction DatePickers() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"date\",\n      label: \"Birthday\",\n      type: \"date\",\n      defaultValue: \"2017-05-24\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DatePickers, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DatePickers;\nexport default class SimpleFormExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        cust_name: '',\n        cust_no: '',\n        inv_no: '',\n        inv_amt: ''\n      },\n      submitted: false\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData\n      });\n    };\n\n    this.handleSubmit = e => {// this.setState({ submitted: true }, () => {\n      //     setTimeout(() => this.setState({ submitted: false }), 5000);\n      // });\n    };\n  }\n\n  render() {\n    const {\n      formData,\n      submitted\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Simple form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Customer Name\",\n        onChange: this.handleChange,\n        name: \"cust_name\",\n        value: formData.cust_name,\n        validators: ['required', 'isString'],\n        errorMessages: ['this field is required', 'Please Enter Name']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Customer Number\",\n        onChange: this.handleChange,\n        name: \"cust_no\",\n        value: formData.cust_no,\n        validators: ['required', 'isNumber'],\n        errorMessages: ['this field is required', 'Please Customer Number']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Invoice Number\",\n        onChange: this.handleChange,\n        name: \"inv_no\",\n        value: formData.inv_no,\n        validators: ['required', 'isNumber'],\n        errorMessages: ['this field is required', 'Please Valid Invoice  Number']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        label: \"Invoice Amount\",\n        onChange: this.handleChange,\n        name: \"inv_amt\",\n        value: formData.inv_amt,\n        validators: ['required', 'isNumber', 'isFloat'],\n        errorMessages: ['this field is required', 'Please Amount  Number']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Due Date : \", /*#__PURE__*/_jsxDEV(DatePickers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        disabled: submitted,\n        children: submitted && 'Your Invoice is Added!' || !submitted && 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePickers\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/addform.jsx"],"names":["React","Button","ValidatorForm","TextValidator","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","DatePickers","classes","shrink","SimpleFormExample","Component","state","formData","cust_name","cust_no","inv_no","inv_amt","submitted","handleChange","event","console","log","target","value","name","setState","handleSubmit","e","render"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;;AAIA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAD4B;AAKvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADH;AAETC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAFJ;AAGTE,IAAAA,KAAK,EAAE;AAHE;AAL4B,CAAZ,CAAD,CAA5B;;AAYC,SAASC,WAAT,GAAuB;AAAA;;AACtB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEY,OAAO,CAACT,SAAzB;AAAoC,IAAA,UAAU,MAA9C;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,YAAY,EAAC,YAJf;AAKE,MAAA,SAAS,EAAES,OAAO,CAACN,SALrB;AAME,MAA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","sourcesContent":["// import React, { Component } from 'react';\r\n// import { FormControl ,InputLabel ,Input ,FormHelperText } from '@material-ui/core';\r\n// import { TextareaAutosize } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import TextField from '@material-ui/core/TextField';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   container: {\r\n//     display: 'flex',\r\n//     flexWrap: 'wrap',\r\n//   },\r\n//   textField: {\r\n//     marginLeft: theme.spacing(1),\r\n//     marginRight: theme.spacing(1),\r\n//     width: 200,\r\n//   },\r\n// }));\r\n\r\n//  function DatePickers() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <form className={classes.container} noValidate>\r\n//       <TextField\r\n//         id=\"date\"\r\n//         label=\"Birthday\"\r\n//         type=\"date\"\r\n//         defaultValue=\"2017-05-24\"\r\n//         className={classes.textField}\r\n//         InputLabelProps={{\r\n//           shrink: true,\r\n//         }}\r\n//       />\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n\r\n// class AddForm extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = { \r\n//             cust_name: '',\r\n//             cust_no:'',\r\n//             inv_no: '',\r\n//             inv_amt:''\r\n//          }\r\n//     }\r\n//     handlecustname =(e) =>{\r\n//         this.setState({\r\n//             cust_name: e.target.value\r\n//         })\r\n//     }\r\n//     handlecustno =(e) =>{\r\n//         this.setState({\r\n//             cust_no: e.target.value\r\n//         })\r\n//     }\r\n//     handleinvno =(e) =>{\r\n//         this.setState({\r\n//             inv_no: e.target.value\r\n//         })\r\n//     }\r\n//     handleinvamt =(e) =>{\r\n//         this.setState({\r\n//             inv_amt: e.target.value\r\n//         })\r\n//     }\r\n//     render() { \r\n//         return (  \r\n//             < div style={{padding:'5px', display: \"flex\"}}>\r\n//                <div style={{padding:'5px', display: \"block\"}}>\r\n//                 <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Customer Name</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\"  value={this.cust_name} onChange={this.handlecustname} required  />\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Customer Number</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.cust_no} onChange={this.handlecustno} required/>\r\n//                     <FormHelperText id=\"my-helper-text\">We'll never share your Number</FormHelperText>\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Invoice Number</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_no} onChange={this.handleinvno} required/>\r\n//                     </FormControl>\r\n//                     <FormControl>\r\n//                     <InputLabel htmlFor=\"my-input\">Invoice Amount</InputLabel>\r\n//                     <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={this.inv_amt} onChange={this.handleinvamt} required/>\r\n//                 </FormControl>\r\n//                </div>\r\n//                <div style={{padding:'5px', display: \"block\"}}>\r\n//                     <FormControl >\r\n//                     Due Date : <DatePickers />\r\n//                 </FormControl>\r\n//                 <FormControl>\r\n//                   Notes: <TextareaAutosize id=\"outlined-basic\" label=\"Notes\" variant=\"outlined\" rowsMin={10}  />\r\n//                   </FormControl>\r\n//                </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n \r\n// export default AddForm;\r\n\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\n function DatePickers() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.container} noValidate>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"Birthday\"\r\n        type=\"date\"\r\n        defaultValue=\"2017-05-24\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\nexport default class SimpleFormExample extends React.Component {\r\n        state = {\r\n        formData : { \r\n                    cust_name: '',\r\n                    cust_no:'',\r\n                    inv_no: '',\r\n                    inv_amt:''\r\n                 },\r\n        submitted: false,\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      console.log(event.target.value);\r\n        const { formData } = this.state;\r\n        formData[event.target.name] = event.target.value;\r\n        this.setState({ formData });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        // this.setState({ submitted: true }, () => {\r\n        //     setTimeout(() => this.setState({ submitted: false }), 5000);\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        const { formData, submitted } = this.state;\r\n        return (\r\n            <ValidatorForm\r\n                ref=\"form\"\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <h2>Simple form</h2>\r\n                <TextValidator\r\n                    label=\"Customer Name\"\r\n                    onChange={this.handleChange}\r\n                    name=\"cust_name\"\r\n                    value={formData.cust_name}\r\n                    validators={['required', 'isString']}\r\n                    errorMessages={['this field is required', 'Please Enter Name']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Customer Number\"\r\n                    onChange={this.handleChange}\r\n                    name=\"cust_no\"\r\n                    value={formData.cust_no}\r\n                    validators={['required' , 'isNumber']}\r\n                    errorMessages={['this field is required', 'Please Customer Number']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Invoice Number\"\r\n                    onChange={this.handleChange}\r\n                    name=\"inv_no\"\r\n                    value={formData.inv_no}\r\n                    validators={['required' , 'isNumber']}\r\n                    errorMessages={['this field is required', 'Please Valid Invoice  Number']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Invoice Amount\"\r\n                    onChange={this.handleChange}\r\n                    name=\"inv_amt\"\r\n                    value={formData.inv_amt}\r\n                    validators={['required' , 'isNumber','isFloat']}\r\n                    errorMessages={['this field is required', 'Please Amount  Number']}\r\n                />\r\n                <div>\r\n                  Due Date : <DatePickers />\r\n                </div>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    disabled={submitted}\r\n                >\r\n                    {\r\n                        (submitted && 'Your Invoice is Added!')\r\n                        || (!submitted && 'Submit')\r\n                    }\r\n                </Button>\r\n            </ValidatorForm>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}