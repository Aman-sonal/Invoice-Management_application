{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\addform.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { TextareaAutosize } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport \"date-fns\";\nimport Snackbar from \"@material-ui/core/snackbar\";\nimport InvoiceTable from \"./table\";\nimport Button from \"@material-ui/core/Button\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MaterialUIPickers({\n  date,\n  handleDate\n}) {\n  _s();\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date(\"2014-08-18\"));\n\n  const handleDateChange = d => {\n    setSelectedDate(d);\n    date = selectedDate;\n    handleDate(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-around\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        variant: \"inline\",\n        format: \"MM/dd/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        name: \"selectedDate\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        KeyboardButtonProps: {\n          \"aria-label\": \"change date\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MaterialUIPickers, \"4kMFG9kxWydi6Zh/jVLWxuIX4nA=\");\n\n_c = MaterialUIPickers;\n\nclass AddForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cust_name: \"\",\n      cust_no: \"\",\n      inv_no: \"\",\n      inv_amt: \"\",\n      date: \"\",\n      notes: \"\",\n      snackbaropen: false,\n      snackbarmsg: \"\"\n    };\n\n    this.handleDate = d => {\n      console.log(d);\n      let v = d.toString();\n      this.setState({\n        date: v\n      });\n      console.log(this.state.formData);\n    };\n\n    this.handleChange = btn => {\n      handleBtn;\n    };\n\n    this.handleSubmit = e => {\n      console.log(e.target.value);\n      this.setState({\n        submitted: true\n      }, () => {\n        setTimeout(() => this.setState({\n          submitted: false\n        }), 5000);\n      });\n    };\n\n    this.snackbarClose = e => {\n      this.setState({\n        snackbaropen: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      btn,\n      handleBtn\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"Ã§enter\"\n        },\n        open: this.state.snackbaropen,\n        autoHideDuration: 3000,\n        onClose: this.snackbarClose,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"msg-id\",\n          children: this.state.snackbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        style: {\n          padding: \"5px\",\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\",\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\",\n                padding: \"5px\"\n              },\n              children: [\" \", \"Customer Name\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              onChange: this.handleChange,\n              size: \"small\",\n              variant: \"outlined\",\n              name: \"cust_name\",\n              validators: [\"required\", \"isString\"],\n              errorMessages: [\"this field is required\", \"Please Enter Name\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \" Customer Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              onChange: this.handleChange,\n              variant: \"outlined\",\n              size: \"small\",\n              name: \"cust_no\",\n              validators: [\"required\", \"isNumber\"],\n              errorMessages: [\"this field is required\", \"Please Enter Customer Number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fintSize: \"15px\"\n              },\n              children: \" Invoice Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              size: \"small\",\n              onChange: this.handleChange,\n              name: \"inv_no\",\n              validators: [\"required\", \"isNumber\"],\n              errorMessages: [\"this field is required\", \"Please Valid Invoice  Number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Invoice Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              size: \"small\",\n              onChange: this.handleChange,\n              name: \"inv_amt\",\n              validators: [\"required\", \"isNumber\", \"isFloat\"],\n              errorMessages: [\"this field is required\", \"Please Amount  Number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"20px\",\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Date Picker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MaterialUIPickers, {\n              name: \"date\",\n              date: this.state.date,\n              handleDate: this.handleDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: \"20px\",\n              display: \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Notes: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              id: \"outlined-basic\",\n              label: \"Notes\",\n              variant: \"outlined\",\n              rowsMin: 10,\n              name: \"notes\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIPickers\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/addform.jsx"],"names":["React","ValidatorForm","TextValidator","TextareaAutosize","Grid","DateFnsUtils","Snackbar","InvoiceTable","Button","MuiPickersUtilsProvider","KeyboardDatePicker","MaterialUIPickers","date","handleDate","selectedDate","setSelectedDate","useState","Date","handleDateChange","d","AddForm","Component","state","cust_name","cust_no","inv_no","inv_amt","notes","snackbaropen","snackbarmsg","console","log","v","toString","setState","formData","handleChange","btn","handleBtn","handleSubmit","e","target","value","submitted","setTimeout","snackbarClose","render","props","vertical","horizontal","padding","display","fontSize","fintSize","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport \"date-fns\";\r\nimport Snackbar from \"@material-ui/core/snackbar\";\r\nimport InvoiceTable from \"./table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction MaterialUIPickers({ date, handleDate }) {\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2014-08-18\")\r\n  );\r\n\r\n  const handleDateChange = (d) => {\r\n    setSelectedDate(d);\r\n    date = selectedDate;\r\n    handleDate(date);\r\n  };\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          name=\"selectedDate\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\nclass AddForm extends React.Component {\r\n  state = {\r\n      cust_name: \"\",\r\n      cust_no: \"\",\r\n      inv_no: \"\",\r\n      inv_amt: \"\",\r\n      date: \"\",\r\n      notes: \"\",\r\n      snackbaropen: false,\r\n      snackbarmsg: \"\",\r\n  };\r\n\r\n  handleDate = (d) => {\r\n    console.log(d);\r\n    let v= d.toString();\r\n    this.setState({date: v });\r\n    console.log(this.state.formData);\r\n  };\r\n\r\n  handleChange = (btn) => {\r\n    handleBtn\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ submitted: true }, () => {\r\n      setTimeout(() => this.setState({ submitted: false }), 5000);\r\n    });\r\n  };\r\n\r\n  snackbarClose = (e) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n  \r\n  render() {\r\n    const {btn, handleBtn}= this.props;\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"Ã§enter\" }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={3000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"msg-id\">{this.state.snackbarmsg}</span>}\r\n        />\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleSubmit}\r\n          style={{ padding: \"5px\", display: \"flex\" }}\r\n        >\r\n          <div style={{ padding: \"5px\", display: \"block\" }}>\r\n            <div style={{ display: \"flex\" }}>\r\n              <span style={{ fontSize: \"15px\", padding: \"5px\" }}>\r\n                {\" \"}\r\n                Customer Name\r\n              </span>\r\n              <TextValidator\r\n                onChange={this.handleChange}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                name=\"cust_name\"\r\n                validators={[\"required\", \"isString\"]}\r\n                errorMessages={[\"this field is required\", \"Please Enter Name\"]}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fontSize: \"15px\" }}> Customer Number</span>\r\n              <TextValidator\r\n                onChange={this.handleChange}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                name=\"cust_no\"\r\n                validators={[\"required\", \"isNumber\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"Please Enter Customer Number\",\r\n                ]}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fintSize: \"15px\" }}> Invoice Number</span>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.handleChange}\r\n                name=\"inv_no\"\r\n                validators={[\"required\", \"isNumber\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"Please Valid Invoice  Number\",\r\n                ]}\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fontSize: \"15px\" }}>Invoice Amount</span>\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={this.handleChange}\r\n                name=\"inv_amt\"\r\n                validators={[\"required\", \"isNumber\", \"isFloat\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"Please Amount  Number\",\r\n                ]}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingLeft: \"20px\", display: \"block\" }}>\r\n            <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n              <span style={{ fontSize: \"15px\" }}>Date Picker</span>\r\n              <MaterialUIPickers\r\n                name=\"date\"\r\n                date={this.state.date}\r\n                handleDate={this.handleDate}\r\n              />\r\n            </div>\r\n            <div style={{ paddingLeft: \"20px\", display: \"block\" }}>\r\n              <span style={{ fontSize: \"15px\" }}>Notes: </span>\r\n              <TextareaAutosize\r\n                id=\"outlined-basic\"\r\n                label=\"Notes\"\r\n                variant=\"outlined\"\r\n                rowsMin={10}\r\n                name=\"notes\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </ValidatorForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddForm;\r\n"]},"metadata":{},"sourceType":"module"}