{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\H2H\\\\Summer_Internship_UI\\\\Summer_Internship_UI\\\\src\\\\components\\\\addform.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { TextareaAutosize } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport \"date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MaterialUIPickers({\n  date,\n  handleDate\n}) {\n  _s();\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date(\"2014-08-18\"));\n\n  const handleDateChange = d => {\n    setSelectedDate(d);\n    date = selectedDate;\n    handleDate(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-around\",\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        variant: \"inline\",\n        format: \"MM/dd/yyyy\",\n        margin: \"normal\",\n        id: \"date-picker-inline\",\n        name: \"selectedDate\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        KeyboardButtonProps: {\n          \"aria-label\": \"change date\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MaterialUIPickers, \"4kMFG9kxWydi6Zh/jVLWxuIX4nA=\");\n\n_c = MaterialUIPickers;\n\nclass AddForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cust_name: \"\",\n      cust_no: \"\",\n      inv_no: \"\",\n      inv_amt: \"\",\n      date: \"\",\n      notes: \"\",\n      btn: false\n    };\n\n    this.handleDate = d => {\n      console.log(d);\n      let v = d.toString();\n      this.setState({\n        date: v\n      });\n      console.log(this.state);\n    };\n\n    this.handleChange = e => {\n      if (e.target.value.length > 0) {\n        var d = false;\n        this.props.handleBtn(false);\n      } else {\n        this.props.handleBtn(true);\n      }\n    };\n  }\n\n  // handleSubmit = (e) => {\n  //   console.log(e.target.value);\n  //   this.setState({ submitted: true }, () => {\n  //     setTimeout(() => this.setState({ submitted: false }), 5000);\n  //   });\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        ref: \"form\",\n        style: {\n          padding: \"5px\",\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"5px\",\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\",\n                padding: \"5px\"\n              },\n              children: \"Customer Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              onChange: this.handleChange,\n              size: \"small\",\n              variant: \"outlined\",\n              name: \"cust_name\",\n              validators: [\"required\", \"isString\"],\n              errorMessages: [\"this field is required\", \"Please Enter Name\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \" Customer Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              onChange: this.handleChange,\n              variant: \"outlined\",\n              size: \"small\",\n              name: \"cust_no\",\n              validators: [\"required\", \"isNumber\"],\n              errorMessages: [\"this field is required\", \"Please Enter Customer Number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fintSize: \"15px\"\n              },\n              children: \" Invoice Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              size: \"small\",\n              onChange: this.handleChange,\n              name: \"inv_no\",\n              validators: [\"required\", \"isNumber\"],\n              errorMessages: [\"this field is required\", \"Please Valid Invoice  Number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Invoice Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n              variant: \"outlined\",\n              size: \"small\",\n              onChange: this.handleChange,\n              name: \"inv_amt\",\n              validators: [\"required\", \"isNumber\", \"isFloat\"],\n              errorMessages: [\"this field is required\", \"Please Amount  Number\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: \"20px\",\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              padding: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Date Picker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MaterialUIPickers, {\n              name: \"date\",\n              date: this.state.date,\n              handleDate: this.handleDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingLeft: \"20px\",\n              display: \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"15px\"\n              },\n              children: \"Notes: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n              id: \"outlined-basic\",\n              label: \"Notes\",\n              variant: \"outlined\",\n              rowsMin: 10,\n              name: \"notes\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIPickers\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/H2H/Summer_Internship_UI/Summer_Internship_UI/src/components/addform.jsx"],"names":["React","ValidatorForm","TextValidator","TextareaAutosize","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","MaterialUIPickers","date","handleDate","selectedDate","setSelectedDate","useState","Date","handleDateChange","d","AddForm","Component","state","cust_name","cust_no","inv_no","inv_amt","notes","btn","console","log","v","toString","setState","handleChange","e","target","value","length","props","handleBtn","render","padding","display","fontSize","fintSize","paddingLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { TextareaAutosize } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport \"date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction MaterialUIPickers({ date, handleDate }) {\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2014-08-18\")\r\n  );\r\n\r\n  const handleDateChange = (d) => {\r\n    setSelectedDate(d);\r\n    date = selectedDate;\r\n    handleDate(date);\r\n  };\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          name=\"selectedDate\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nclass  AddForm  extends React.Component{\r\n\r\n  state= {\r\n      cust_name: \"\",\r\n      cust_no: \"\",\r\n      inv_no: \"\",\r\n      inv_amt: \"\",\r\n      date: \"\",\r\n      notes: \"\",\r\n      btn:false\r\n  }\r\n\r\n   handleDate = (d) => {\r\n    console.log(d);\r\n    let v= d.toString();\r\n    this.setState({date: v });\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    if(e.target.value.length > 0)\r\n    {\r\n      var d= false;\r\n      this.props.handleBtn(false);\r\n    }\r\n    else{\r\n      this.props.handleBtn(true);\r\n    }\r\n}\r\n  // handleSubmit = (e) => {\r\n  //   console.log(e.target.value);\r\n  //   this.setState({ submitted: true }, () => {\r\n  //     setTimeout(() => this.setState({ submitted: false }), 5000);\r\n  //   });\r\n  // };\r\n  render(){\r\n    return (\r\n      <div>\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            style={{ padding: \"5px\", display: \"flex\" }}\r\n          >\r\n            <div style={{ padding: \"5px\", display: \"block\" }}>\r\n              <div style={{ display: \"flex\" }}>\r\n                <span style={{ fontSize: \"15px\", padding: \"5px\" }}>\r\n                  Customer Name\r\n                </span>\r\n                <TextValidator\r\n                  onChange={this.handleChange}\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  name=\"cust_name\"\r\n                  validators={[\"required\", \"isString\"]}\r\n                  errorMessages={[\"this field is required\", \"Please Enter Name\"]}\r\n                />\r\n              </div>\r\n  \r\n              <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n                <span style={{ fontSize: \"15px\" }}> Customer Number</span>\r\n                <TextValidator\r\n                  onChange={this.handleChange}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  name=\"cust_no\"\r\n                  validators={[\"required\", \"isNumber\"]}\r\n                  errorMessages={[\r\n                    \"this field is required\",\r\n                    \"Please Enter Customer Number\",\r\n                  ]}\r\n                />\r\n              </div>\r\n  \r\n              <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n                <span style={{ fintSize: \"15px\" }}> Invoice Number</span>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={this.handleChange}\r\n                  name=\"inv_no\"\r\n                  validators={[\"required\", \"isNumber\"]}\r\n                  errorMessages={[\r\n                    \"this field is required\",\r\n                    \"Please Valid Invoice  Number\",\r\n                  ]}\r\n                />\r\n              </div>\r\n              <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n                <span style={{ fontSize: \"15px\" }}>Invoice Amount</span>\r\n                <TextValidator\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onChange={this.handleChange}\r\n                  name=\"inv_amt\"\r\n                  validators={[\"required\", \"isNumber\", \"isFloat\"]}\r\n                  errorMessages={[\r\n                    \"this field is required\",\r\n                    \"Please Amount  Number\",\r\n                  ]}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={{ paddingLeft: \"20px\", display: \"block\" }}>\r\n              <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n                <span style={{ fontSize: \"15px\" }}>Date Picker</span>\r\n                <MaterialUIPickers\r\n                  name=\"date\"\r\n                  date={this.state.date}\r\n                  handleDate={this.handleDateChange}\r\n                />\r\n              </div>\r\n  \r\n              <div style={{ paddingLeft: \"20px\", display: \"block\" }}>\r\n                <span style={{ fontSize: \"15px\" }}>Notes: </span>\r\n                <TextareaAutosize\r\n                  id=\"outlined-basic\"\r\n                  label=\"Notes\"\r\n                  variant=\"outlined\"\r\n                  rowsMin={10}\r\n                  name=\"notes\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </ValidatorForm>\r\n        </div>\r\n      );\r\n  }\r\n  }\r\nexport default AddForm;\r\n"]},"metadata":{},"sourceType":"module"}